@model MedData

@{
    var medDataKeywords = ViewBag.MedDataKeywords as IList<string?>;
    var counter = ViewBag.Counter as string;

    string HighlightKeywords(string text, IList<string> keywords)
    {
        for (int i = 0; i < keywords.Count(); i++)
        {
            var kw = keywords[i];
            var highlightStyle = i == 0 ? "current_keyword" : "not_annotated_keyword";
            if (!string.IsNullOrEmpty(kw))
            {
                var replacement = $"<span id='keyword-{i}' class='{highlightStyle} keyword'>{kw}</span>";
                text = text.Replace(kw, replacement);
            }
        }

        return text;
    }

    string? transformedImageDescription = default;

    if (Model != null)
    {
        transformedImageDescription = HighlightKeywords(Model.ImageDescription!, medDataKeywords!);
    }
}

<link rel="stylesheet" href="~/css/professionalPage.css" asp-append-version="true" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" />

@if (Model != null)
{
    <div class="container">
        <div class="left-column">
            <div class="header-text">
                <p style="color:grey;">@Html.Raw(transformedImageDescription)</p>
            </div>

            <div class="main-content">
                <div class="annotation-section">
                    <div id="image-container">
                        <img id="sourceImage"
                            src="@Model.ImageUrl"
                            alt="Image for Annotation" style="display:none; max-width: 100%; max-height: 100%; object-fit: contain;">
                        <div id="canvasContainer">
                            <canvas id="mainCanvas"></canvas>
                        </div>
                    </div>
                    <div class="buttons-section">
                        <button
                            title="Click Not Visible if you are certain that it is not possible to visually annotate the current medical term in this particular image."
                            id="not-present-button" type="button" class="button btn btn-block">
                            Not Visible/Abstract
                        </button>
                        <button
                            title="Click Location Uncertain if you are unsure whether the current medical term is present in the image at all, or of its exact location."
                            id="skip-button" type="button" class="button btn btn-block">
                            Uncertain/Skip
                        </button>
                        <button id="next-button" type="button" class="button btn btn-block" disabled>
                            Save and Next Term
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="right-column">
            <div class="metadata">
                <div class="metadata-inner">
                    <p><a href="@($"https://www.ncbi.nlm.nih.gov/pmc/articles/{Model.Pmcid}")">Original Publication (optional)</a></p>
                    @if (Model.Diagnosis != "u" && Model.Diagnosis != "na")
                    {
                        <p><strong>Diagnosis: </strong>@Model.Diagnosis</p>
                    }
                    @if (Model.Speciality != "u" && Model.Speciality != "na")
                    {
                        <p><strong>Speciality: </strong>@Model.Speciality</p>
                    }
                    @if (Model.Sex != "u" && Model.Sex != "na")
                    {
                        <p><strong>Sex: </strong>@Model.Sex</p>
                    }
                    @if (Model.Age != "u" && Model.Age != "na")
                    {
                        <p><strong>Age: </strong>@Model.Age</p>
                    }
                    @if (Model.SkinTone != "u" && Model.SkinTone != "na")
                    {
                        <p><strong>Skin Tone: </strong>@Model.SkinTone</p>
                    }
                    @if (Model.BodyRegion != "u" && Model.BodyRegion != "na")
                    {
                        <p><strong>Body Region: </strong>@Model.BodyRegion</p>
                    }
                </div>
            </div>
            <div class="comments-section">
                <textarea class="form-control" id="comments" placeholder="Leave your comments here..."></textarea>
            </div>
        </div>
    </div>
}
else
{
    <div class="centered-container">
        <div class="no-data-message">
            <div class="no-data-icon">
                <i class="bi bi-file-earmark-x"></i>
            </div>
            <h3 class="mb-4" style="color: #a9000e;">
                No more data is available for annotation in this specialty.
            </h3>
            <p>Thank you for your contributions!</p>
            <button id="end-button-center" type="button" class="button mt-4">
                Log Out
            </button>
        </div>
    </div>
}
<div class="logout-section">
    <div class="counter-display">
        <span id="counter-value">@counter</span>
    </div>
    <button id="end-button" type="button">
        Log Out
    </button>
</div>

<script type="text/javascript" defer>
    window.annotatedMedData = @Html.Raw(Json.Serialize(Model));

    document.addEventListener('DOMContentLoaded', function() {
        // Handle text overflow with fixed font sizes
        function handleTextScaling() {
            const headerText = document.querySelector('.header-text');
            if (!headerText) return; // Skip if not found (no data page)
            
            const textParagraph = headerText.querySelector('p');
            
            // Reset any existing state
            headerText.classList.remove('text-scale');
            headerText.style.overflowY = 'hidden';
            
            if (textParagraph) {
                // Check if content overflows with normal font size
                if (textParagraph.scrollHeight > headerText.clientHeight) {
                    // Apply smaller font size
                    headerText.classList.add('text-scale');
                }
            }
        }
        
        // Run on page load
        handleTextScaling();
        
        // Run on window resize
        window.addEventListener('resize', handleTextScaling);
        
        // Check text scaling when image loads (may affect layout)
        const sourceImage = document.getElementById('sourceImage');
        if (sourceImage && !sourceImage.complete) {
            sourceImage.onload = handleTextScaling;
        }
    });
</script>
<script src="~/js/canvas.js" asp-append-version="true"></script>
<script src="~/js/professionalPage.js" asp-append-version="true" defer></script> 